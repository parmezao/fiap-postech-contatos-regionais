
volumes:
  sqlserver_data:

services: 
  api01: 
    hostname: api01
    build:
      context: .
      dockerfile: ./src/ContatosRegionais.Api/Dockerfile        
    restart: always
    environment:
      ASPNETCORE_ENVIRONMENT: Docker
    depends_on:
      - db
    ports:
      - "8080:8080"

  # apiqueue:  
  #   hostname: apiqueue
  #   build:
  #     context: .
  #     dockerfile: ./src/Contatos.Web.ApiMessaging/Dockerfile        
  #   restart: always
  #   environment:
  #     ASPNETCORE_ENVIRONMENT: Docker
  #     RABBITMQ_HOST: rabbitmq
  #     RABBITMQ_PORT: 5672
  #     RABBITMQ_USER: guest
  #     RABBITMQ_PASSWORD: guest
  #   # depends_on:
  #   #   - db
  #   #   - rabbitmq
  #   ports:
  #     - "8084:8080"

  # rabbitmq-consumer:
  #   container_name: rabbitmq-consumer
  #   hostname: rabbitmq-consumer
  #   build:
  #     context: .
  #     dockerfile: ./src/Contatos.Web.Infrastructure.Consumer/Dockerfile        
  #   restart: always
  #   environment:
  #     ASPNETCORE_ENVIRONMENT: Docker
  #     RABBITMQ_HOST: rabbitmq
  #     RABBITMQ_PORT: 5672
  #     RABBITMQ_USER: guest
  #     RABBITMQ_PASSWORD: guest
  #   depends_on:
  #     - db
  #     - rabbitmq
  #   ports:
  #     - "8082:8080"

  db:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=PkjRej8@30
    ports:
      - 1433:1433
    volumes:
      - sqlserver_data:/var/opt/mssql
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P PkjRej8@30 -Q 'SELECT 1' || exit 1"]
      interval: 10s
      retries: 10
      start_period: 10s
      timeout: 3s

#   rabbitmq:
#     image: rabbitmq:management
#     container_name: rabbitmq
#     restart: always
#     ports:
#       - "5672:5672"
#       - "15672:15672"
#       - "15692:15692" 
#     environment:
#       RABBITMQ_DEFAULT_USER: guest
#       RABBITMQ_DEFAULT_PASS: guest
#     command: >
#       sh -c "
#       rabbitmq-plugins enable --offline rabbitmq_prometheus &&
#       rabbitmq-server"

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:      
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - default

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin@123
    volumes:
      - ./grafana:/var/lib/grafana
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus
    networks:
      - default

networks:
  default:
    driver: bridge
    name: tech_challenge
